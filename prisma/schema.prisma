// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid()) @db.Uuid
  auth0Id String @unique
  email String @unique
  name String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  picture String?
  
  // To-Do
  // role ...

}

model Exercise {
  id String @id @default(uuid()) @db.Uuid
  name String

  // Relación con el modelo Level
  levelId   String   @db.Uuid
  level     Level    @relation(fields: [levelId], references: [id])

  // Relación con el modelo Equipment
  equipmentId   String?       @db.Uuid
  equipment     Equipment?    @relation(fields: [equipmentId], references: [id])

  // Relación Muchos a Muchos con BodyPart
  bodyParts  BodyPart[]

  instructions String? @db.Text

  // Relación con el modelo Category
  categoryId   String?      @db.Uuid
  category     Category?    @relation(fields: [categoryId], references: [id])

  // Relación con imágenes
  images     ExerciseImage[]

}

model Level {
  id String @id @default(uuid()) @db.Uuid
  name String @unique
  exercises Exercise[]
}

model Equipment {
  id String @id @default(uuid()) @db.Uuid
  name String @unique
  exercises Exercise[]
}

model BodyPart {
  id         String      @id @default(uuid()) @db.Uuid
  name       String      @unique
  exercises  Exercise[]
}

model Category {
  id         String      @id @default(uuid()) @db.Uuid
  name       String      @unique
  exercises Exercise[]
}

model ExerciseImage {
  id          String   @id @default(uuid()) @db.Uuid
  url         String
  exerciseId  String   @db.Uuid
  exercise    Exercise @relation(fields: [exerciseId], references: [id])
}